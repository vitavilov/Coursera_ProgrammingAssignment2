## Create an object that contains
## a matrix and it's inversed form in local environment
## and a list of 4 functions in global environment
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() {x}
setinv <- function(inversed) {inv <<- inversed}
getinv <- function(){inv}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## assumed that the matrix supplied is always invertible
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
test <- makeCacheMatrix(matrix(rnorm(25),nrow = 5,ncol = 5))
cacheSolve(test)
cacheSolve(test)
test <- makeCacheMatrix(matrix(1:25,nrow = 5,ncol = 5))
cacheSolve(test)
